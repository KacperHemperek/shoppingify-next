// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider          = "mysql"
  url               = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
  relationMode      = "foreignKeys"
}

model User {
  id         Int        @id @unique @default(autoincrement())
  name       String     @db.VarChar(255)
  email      String     @unique
  password   String
  sessions   Session[]
  categories Category[]
  lists      List[]

  @@index([id])
}

model Session {
  id Int @id @unique @default(autoincrement())

  user   User @relation(fields: [userId], references: [id])
  userId Int

  @@index([id])
}

model Category {
  id        Int        @id @unique @default(autoincrement())
  name      String
  items     Item[]
  listItems ListItem[]
  user      User       @relation(fields: [userId], references: [id])
  userId    Int
}

model Item {
  id        Int        @id @unique @default(autoincrement())
  listItems ListItem[]
  name      String
  desc      String

  category   Category @relation(fields: [categoryId], references: [id])
  categoryId Int
}

enum ListState {
  completed
  cancelled
  current
}

model List {
  id        Int        @id @unique @default(autoincrement())
  name      String
  items     ListItem[]
  state     ListState  @default(current)
  createdAt DateTime   @default(now())

  user   User @relation(fields: [userId], references: [id])
  userId Int
}

model ListItem {
  id      Int     @id @unique @default(autoincrement())
  amount  Int
  checked Boolean

  list       List      @relation(fields: [listId], references: [id])
  listId     Int
  item       Item      @relation(fields: [itemId], references: [id])
  itemId     Int
  category   Category? @relation(fields: [categoryId], references: [id])
  categoryId Int?
}
